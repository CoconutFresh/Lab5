
gbers002_bzhan014_lab5_part3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  0000014a  000001de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000014a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00800102  00800102  000001e0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001e0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000210  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  00000250  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008a8  00000000  00000000  00000278  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007e7  00000000  00000000  00000b20  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000274  00000000  00000000  00001307  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000034  00000000  00000000  0000157c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000424  00000000  00000000  000015b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  000019d4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea e4       	ldi	r30, 0x4A	; 74
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 30       	cpi	r26, 0x02	; 2
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a2 e0       	ldi	r26, 0x02	; 2
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a5 30       	cpi	r26, 0x05	; 5
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	35 d0       	rcall	.+106    	; 0x12e <main>
  c4:	40 c0       	rjmp	.+128    	; 0x146 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <tick>:
unsigned char button = 0x00;
unsigned char led = 0x15;
unsigned char temp = 0x00;

void tick() {
	switch(state) { //transition
  c8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <state>
  cc:	81 30       	cpi	r24, 0x01	; 1
  ce:	41 f0       	breq	.+16     	; 0xe0 <tick+0x18>
  d0:	18 f0       	brcs	.+6      	; 0xd8 <tick+0x10>
  d2:	82 30       	cpi	r24, 0x02	; 2
  d4:	69 f0       	breq	.+26     	; 0xf0 <tick+0x28>
  d6:	16 c0       	rjmp	.+44     	; 0x104 <tick+0x3c>
		case start:
			state = set;
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <state>
			break;
  de:	14 c0       	rjmp	.+40     	; 0x108 <tick+0x40>
		case set:
			if (button == 0x01) {
  e0:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <button>
  e4:	81 30       	cpi	r24, 0x01	; 1
  e6:	81 f4       	brne	.+32     	; 0x108 <tick+0x40>
				state = hold;
  e8:	82 e0       	ldi	r24, 0x02	; 2
  ea:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <state>
  ee:	08 95       	ret
			}
			break;
		case hold:
			if (button == 0x01) {
  f0:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <button>
  f4:	81 30       	cpi	r24, 0x01	; 1
  f6:	d1 f0       	breq	.+52     	; 0x12c <tick+0x64>
				state = hold;
			}
			else {
				temp = 0x01;
  f8:	81 e0       	ldi	r24, 0x01	; 1
  fa:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
				state = set;
  fe:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <state>
 102:	02 c0       	rjmp	.+4      	; 0x108 <tick+0x40>
			}
			break;
	}
	switch (state) { //state action
 104:	81 30       	cpi	r24, 0x01	; 1
 106:	91 f4       	brne	.+36     	; 0x12c <tick+0x64>
		case set:
			if (button == 0x00 && temp == 0x01) {
 108:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <button>
 10c:	81 11       	cpse	r24, r1
 10e:	0b c0       	rjmp	.+22     	; 0x126 <tick+0x5e>
 110:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
 114:	81 30       	cpi	r24, 0x01	; 1
 116:	39 f4       	brne	.+14     	; 0x126 <tick+0x5e>
				led = ~led;
 118:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 11c:	80 95       	com	r24
 11e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
				temp = 0x00;
 122:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__data_end>
			}
			PORTB = led;
 126:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 12a:	85 b9       	out	0x05, r24	; 5
 12c:	08 95       	ret

0000012e <main>:
			break;
	}
}
int main(void)
{
    DDRA = 0x00; PORTA = 0xFF;
 12e:	11 b8       	out	0x01, r1	; 1
 130:	8f ef       	ldi	r24, 0xFF	; 255
 132:	82 b9       	out	0x02, r24	; 2
	DDRB = 0xFF; PORTB = 0x00;
 134:	84 b9       	out	0x04, r24	; 4
 136:	15 b8       	out	0x05, r1	; 5
	button = (~PINA & 0x01);
 138:	80 b1       	in	r24, 0x00	; 0
 13a:	80 95       	com	r24
 13c:	81 70       	andi	r24, 0x01	; 1
 13e:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <button>
    while (1) 
    {
		
		tick();
 142:	c2 df       	rcall	.-124    	; 0xc8 <tick>
 144:	fe cf       	rjmp	.-4      	; 0x142 <main+0x14>

00000146 <_exit>:
 146:	f8 94       	cli

00000148 <__stop_program>:
 148:	ff cf       	rjmp	.-2      	; 0x148 <__stop_program>
